@using Mono.TextTemplating
@inherits LayoutComponentBase
@inject NavigationManager navigationManager
@inject ToastService toastService

<link rel="stylesheet" href="css/styles.css">

<Toasts class="p-3" AutoHide="true" Delay="4000" Placement="ToastsPlacement.TopRight" />

<div>
    <main>
        <header>
            <button @onclick="Volver">
                <img src="/Money.png" alt="Ícono de Menú" />
                <span>Prestamax SRL</span>
            </button>
            <button @onclick="SalirMenu">
                Usuario: @userName
            </button>
        </header>

        <article>
            <!-- Usa @Body directamente en lugar de un parámetro -->
            @Body
        </article>

        <footer>
            <p>© 2024 Prestamax SRL</p>
        </footer>
    </main>
</div>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="/menu" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

@code {
    [CascadingParameter]
    private Task<AuthenticationState> AuthenticationState { get; set; } = default!;

    List<ToastMessage> Mensaje = new List<ToastMessage>();
    ToastsPlacement toastsPlacement = ToastsPlacement.TopRight;

    private string userName = string.Empty;

    protected override async Task OnParametersSetAsync()
    {
        var authState = await AuthenticationState;
        var user = authState.User;

        if (user.Identity is not null && user.Identity.IsAuthenticated)
        {
            userName = user.Identity.Name ?? "Usuario";
        }
        else
        {
            userName = "Invitado";
        }
    }

    private void Volver()
    {
        navigationManager.NavigateTo("/menu");
    }

    private void SalirMenu()
    {
        navigationManager.NavigateTo("/logout");
    }

    public void MostrarNotificacion(ToastType tipo, string titulo, string mensaje)
    {
        Mensaje.Add(new ToastMessage
            {
                Type = tipo,
                Title = titulo,
                Message = mensaje,
                HelpText = $"{DateTime.Now}"
            });
    }
}