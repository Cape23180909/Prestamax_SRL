@using Mono.TextTemplating
@inherits LayoutComponentBase
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<Toasts class="p-3" AutoHide="true" Delay="4000" Placement="ToastsPlacement.TopRight" />

<div style="background: linear-gradient(to right, #1A2E5B, #0C3E9F); min-height: 100vh;">
    <main style="display: flex; flex-direction: column; justify-content: space-between; min-height: 100vh;">
        <header style="background-color: #1A2E5B; padding: 10px; display: flex; align-items: center;">
            <button @onclick="Volver" style="background: none; border: none; cursor: pointer; display: flex; align-items: center; color: white;">
                <img src="/Money.png" alt="Ícono de Menú" style="width: 70px; height: 40px; margin-right: 8px;" />
                <span style="color: white;">Prestamax_SRL</span>
            </button>
            <button @onclick="SalirMenu" style="background: none; border: none; color: white; font-size: 18px; margin-left: auto; cursor: pointer;">
                Usuario: @userName
            </button>
        </header>

        <article style="flex-grow: 1; display: flex; justify-content: center; align-items: center; padding: 20px;">
            @Body <!-- Esto ahora debe funcionar correctamente -->
        </article>

        <footer style="text-align: center; color: white; padding: 10px; background-color: #1A2E5B;">
            <p>© 2024 Prestamax SRL</p>
        </footer>
    </main>
</div>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

@code {
    [CascadingParameter]
    private Task<AuthenticationState> AuthenticationState { get; set; }

    private string userName;

    protected override async Task OnParametersSetAsync()
    {
        var authState = await AuthenticationState;
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            userName = user.Identity.Name; 
        }
        else
        {
            userName = ""; 
        }
    }

    public void Volver()
    {
        navigationManager.NavigateTo("/menu");
    }

    public void SalirMenu()
    {
        navigationManager.NavigateTo("/logout");
    }
}
