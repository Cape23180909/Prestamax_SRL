@page "/"
@inject SignInManager<ApplicationUser> SignInManager
@inject ILogger<Login> Logger
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager

<PageTitle>Inicio Sesi&oacute;n</PageTitle>
<div class="login-container">
    <div class="login-box">
        <h2>Prestamax SRL</h2>
        <img src="/Money.png" alt="Icono Login" class="login-icon" />
        <EditForm Model="Input" method="post" OnValidSubmit="LoginUser" FormName="loginForm">
            <DataAnnotationsValidator />
            <div class="form-group">
                <label for="email">Correo Electronico</label>
                <InputText id="email" @bind-Value="Input.Email" class="form-control" placeholder="nombre_usuario@gmail.com" />
                <ValidationMessage For="() => Input.Email" class="text-danger" />
            </div>
            <div class="form-group">
                <label for="password">Contraseña</label>
                <InputText id="password" type="password" @bind-Value="Input.Password" class="form-control" placeholder="Contraseña" />
                <ValidationMessage For="() => Input.Password" class="text-danger" />
            </div>
            <button type="submit" class="btn-submit">Entrar</button>
            <div class="links">
                <p><a href="Account/ForgotPassword">Forgot your password?</a></p>
                <p>
                    <a href="@(NavigationManager.GetUriWithQueryParameters("Account/Register", new Dictionary<string, object?> { ["ReturnUrl"] = ReturnUrl }))">
                        Register as a new user
                    </a>
                </p>
                <p><a href="Account/ResendEmailConfirmation">Resend email confirmation</a></p>
            </div>
        </EditForm>
    </div>
</div>

@code {
    private string? errorMessage;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    [SupplyParameterFromQuery]
    private string? ReturnUrl { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (HttpMethods.IsGet(HttpContext.Request.Method))
        {
            // Clear the existing external cookie to ensure a clean login process
            await HttpContext.SignOutAsync(IdentityConstants.ExternalScheme);
        }
    }

    public async Task LoginUser()
    {
        var result = await SignInManager.PasswordSignInAsync(Input.Email, Input.Password, Input.RememberMe, lockoutOnFailure: false);
        if (result.Succeeded)
        {
            Logger.LogInformation("User logged in.");
            RedirectManager.RedirectTo("/menu"); // Redirige al componente "Menu"
        }
        else if (result.RequiresTwoFactor)
        {
            RedirectManager.RedirectTo(
                "Account/LoginWith2fa",
                new() { ["returnUrl"] = "/menu", ["rememberMe"] = Input.RememberMe });
        }
        else if (result.IsLockedOut)
        {
            Logger.LogWarning("User account locked out.");
            RedirectManager.RedirectTo("Account/Lockout");
        }
        else
        {
            errorMessage = "Error: Invalid login attempt.";
        }
    }

    private sealed class InputModel
    {
        [Required]
        [EmailAddress]
        public string Email { get; set; } = "";

        [Required]
        [DataType(DataType.Password)]
        public string Password { get; set; } = "";

        [Display(Name = "Remember me?")]
        public bool RememberMe { get; set; }
    }
}